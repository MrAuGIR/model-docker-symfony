version: '3.5'

services:
  php:
    container_name: ${PROJECT_NAME}_php
    image: pimcore/pimcore:php8.1-latest
    expose:
      - 9000
    volumes:
      - ${LOCAL_PROJECT_ROOT}:/var/www/html:cached
      - ~/.config/composer/auth.json:/root/.config/composer/auth.json:ro
      - ./php.ini:/usr/local/etc/php/conf.d/timezone.ini:ro
      - ./messenger-worker.conf:/etc/supervisor/conf.d/messenger-worker.conf:ro
      - ./supervisor-pimcore.conf:/etc/supervisor/conf.d/supervisor-pimcore.conf:ro
    depends_on:
      - db
      - redis
      - mail
    env_file:
      - .env

  nginx:
    container_name: ${PROJECT_NAME}_nginx
    image: nginx:stable-alpine
    ports:
      - 3000:80
    volumes:
      - ${LOCAL_PROJECT_ROOT}:/var/www/html:ro
      - ./.docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
      - phpmyadmin
    environment:
      PMA_HOST_SOCKET: phpmyadmin

  db:
    container_name: ${PROJECT_NAME}_db
    image: mariadb:10.7
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - dbdata:/var/lib/mysql
    env_file:
      - .env

  phpmyadmin:
    container_name: ${PROJECT_NAME}_pma
    image: phpmyadmin/phpmyadmin:5.1
    depends_on:
      - db

  mail:
    container_name: ${PROJECT_NAME}_mail
    image: maildev/maildev:1.1.0
    command: bin/maildev --web 80 --smtp 25 --hide-extensions STARTTLS
    ports:
      #80 is the exposed port but we want to redirect to 8080 for our configuration
      - 3081:80

  redis:
    container_name: ${PROJECT_NAME}_redis
    image: redis:6.2
    command: redis-server --maxmemory 1gb --maxmemory-policy volatile-lru --save ""

  redis-webui:
    container_name: ${PROJECT_NAME}_redisbrowser
    image: obytes/redis-browser
    #redis image exposes the 6379 port
    #this web ui needs to 'see' redis
    command: --url redis://redis:6379
    ports:
      - 4567:4567
    depends_on:
      - redis

  dozzle:
    container_name: ${PROJECT_NAME}_dozzle
    image: amir20/dozzle:v3.10.1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080

volumes:
  dbdata:
    name: ${PROJECT_NAME}_dbdata
